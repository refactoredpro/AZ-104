{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "VM size"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "NorthCentralUS",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 2
         }
    },
    "variables": {
        "resourcePrefix": "Skylines",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "ubuntuOSVersion": "18.04-LTS",
        "availabilitySetName": "[concat(variables('resourcePrefix'),'-AS')]",
        "virtualNetworkName": "[concat(variables('resourcePrefix'),'-Vnet-1')]",
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "FrontEnd",
        "subnet1Prefix": "10.0.0.0/24",
        "addressPrefix2": "10.1.0.0/16",
        "subnet1Name2": "FrontEnd",
        "subnet1Prefix2": "10.1.0.0/24",
        "networkSecurityGroupName": "[concat(variables('resourcePrefix'),'-NSG')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat(variables('resourcePrefix'),'-AS')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "name": "[concat(variables('resourcePrefix'),'-NSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-HTTP-Inbound",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "80",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('resourcePrefix'),'-Vnet-1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('resourcePrefix'),'-Vnet-2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix2')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name2')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix2')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('resourcePrefix'),'VM',copyIndex(1),'-nic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "NICCopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('resourcePrefix'),'VM',copyIndex(1))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('resourcePrefix'),'VM',copyIndex(1),'-nic'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('resourcePrefix'),'VM',copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64('#cloud-config\npackage_upgrade: true\npackages:\n - nginx')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('resourcePrefix'),'VM',copyIndex(1),'-nic'))]"

                        }
                    ]
                }
            },
            "copy": {
                "name": "VMCopy",
                "count": "[parameters('vmCount')]"
            }
        }
       
    ]
}